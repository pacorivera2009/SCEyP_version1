<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxMenu3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAYFJREFUSEvVljFuwkAQRblHRJ1AlcSBNhYcIBwgSGljmlShRQr0mD5UoQkXMF0a
        y70vYB/ARW4w2b/yWrYZbOxdRaJ4MozH8zS7s5Y7RNSYbvdqUeKFyzsFG6xDSKjED5d3CjaIIqWiTfgV
        3HJ1FWxQPCSlq9WyMbOZo8Q2VxuwQSVNkqQxh4OX75rd66MAMCgFb+X6hT8KkVgpDcOQlssPmkye5DWK
        ouxeHMdSDDYblxUXZIo6aa93ne+EHOeVzct1vcjXL8gUIqlS2u/f0GBgkWXdCe7lby7PqDQtlGHbj2ye
        USn2Mi0mwb5yeUal2+1nJsT++r7P5hmVgt3ui8bjEQVBwN4HRqT7/becVDW90+mzvA6HDzSfvx91rCXF
        OURXaYEMLpY/PlpSdIjhKQMBF8fLQ1valsuSYqnSB88GS6wlBZ7nNUJNcWspJhdvnCa47lpPiuUtT2cd
        OL9aUsAtYRVGlpfrpgr1gtDqtC2XIzXIWdK1AGJTFD5FC7L/gTp/rTPENrkB+MsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pbxMenu2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAmpJREFUSEvFl7tOG0EUhv0I6SNaAn1EA7GW8AAxXZCCgiKa0AQaaCIUCTo32SJ0
        oQpNaFK6TONsbz+AX8BF3mDib7T/7tnJeD1GwhS/PJdz5jvnzMV2xznXmU6nz2b6sgJl8AT8O5NbkTKg
        p8HgY+sXUNJuTNzf/3TX11deef7VTSaTxnybbm+/V760I76/G1AM9vZeu83NF+7k5KO7uDh3W1svfZ8F
        ZBfTcDisbENf5oxtEwoQjcdjd3j4zvV6b3zWZLu29twNBgPrXIlgBSuKwvsh7BljbjQayb6GkgmTLAAI
        CMKZeZzVDkVQZKW2fMmWMfzwL+1rqEpCmwhDR0pEn3YoFgVG2wYsX8ZIqLSvoTiy+eWEz3xnZ7vqU4E2
        KAurf3n52R0dva/6SqLs11CA7CPO7Kui1V4F0TaEHzYESpmtr24Aa5b2NVTlw1lHXiLybveVj54F7DUA
        lOe5B5ydfYr6bmys+3bpU0MRe4CzXZjS6FQXxR+fCer3+34Me3tK7dWiOtiaLFETisISKXsFwSfBMb6/
        32tkTTaA5UcbW2sz0/9QiXtFBrE5xKLz5vENHgSr+dBFaoMu0MOgZMI+mVdmGS0H1cHQniG734lKh3JI
        gPB5c/PNf97d/ahO9hLgNChlBEimus+IRwEYUDKO+UaUBiUrPfZcKUEpNWNtr1VEaVAyAmz7QO21oK/2
        AqVBueA6MGR6cPDWZVnXjwNW+WO+EaVBVb7d3awqrdXx8YfwqWtTGhTNO6X60l7ioUiHAuMwkTF7SmkJ
        gr595BOUDpUoNYcKhV9zifLQJ/ndu/pf+Kv/L+M6/wABvaNDgjXzxAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pbxMenu1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAdCAYAAABWk2cPAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAZ9JREFUSEvtl79Kw0Acx/MI7tJBqk27SKVSpFOxixSLfQALDnawUuhkJ0vBPoAd
        7GaHjHZxzOiSXfIC8QEy+AY/8w1cuFx+uaJyRbDDh5C7b+5zf36BxCIiKwzDnYhRxNQwTfiE9C2CNsQI
        wqrSaJoPSJtKo3G2UqP8TannedTrXVKlYlOrdUrz+SOb+w5a6XL5TIXCbobfirXSbveClWLFXB74vk+u
        61IQBGw/0Eo7nfOMsFTaj69cfjy+S3I4jtXqhc1ppbPZQzKITLt9lslCoOYg5lb8ozMdDG4yWRQb+mq1
        o3j7i8W9+B5brWa1UpyPLBNgMmoW52/bB1Qul9ZmtVKAVcmD5BURjqLROEllMQFMXM2uleJMRBVDiPeW
        ywHHcZLsYvHEbi3IlWJwVKMsFFesnqtM8argiufzJpiS4gG8+PX6cSyQQZ8QC1Cdk8k99fvXSRsKSq5k
        jIWtl6s4JRUVyAEB1w6q1cPUPZeVayGRYiuwlXmIrc5jOLyNV6QjI90kW6lR/o30U3zhvysdJpmq/zL4
        vTDFa8QVEVlfR33WaN/AnLUAAAAASUVORK5CYII=
</value>
  </data>
</root>